/* This file was automatically generated by CasADi.
   The CasADi copyright holders make no ownership claim of its contents. */
/* How to prefix internal symbols */
#ifdef CODEGEN_PREFIX
  #define NAMESPACE_CONCAT(NS, ID) _NAMESPACE_CONCAT(NS, ID)
  #define _NAMESPACE_CONCAT(NS, ID) NS ## ID
  #define CASADI_PREFIX(ID) NAMESPACE_CONCAT(CODEGEN_PREFIX, ID)
#else
  #define CASADI_PREFIX(ID) fconstraints_jacobian_ ## ID
#endif

#include <math.h>

#ifndef casadi_real
#define casadi_real double
#endif

#ifndef casadi_int
#define casadi_int long long int
#endif

/* Add prefix to internal symbols */
#define casadi_f0 CASADI_PREFIX(f0)
#define casadi_s0 CASADI_PREFIX(s0)
#define casadi_s1 CASADI_PREFIX(s1)

/* Symbol visibility in DLLs */
#ifndef CASADI_SYMBOL_EXPORT
  #if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
    #if defined(STATIC_LINKED)
      #define CASADI_SYMBOL_EXPORT
    #else
      #define CASADI_SYMBOL_EXPORT __declspec(dllexport)
    #endif
  #elif defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
    #define CASADI_SYMBOL_EXPORT __attribute__ ((visibility ("default")))
  #else
    #define CASADI_SYMBOL_EXPORT
  #endif
#endif

static const casadi_int casadi_s0[59] = {55, 1, 0, 55, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54};
static const casadi_int casadi_s1[344] = {33, 55, 0, 5, 10, 17, 22, 27, 34, 39, 44, 51, 56, 61, 68, 73, 78, 85, 96, 107, 120, 126, 132, 140, 146, 152, 160, 166, 172, 180, 186, 192, 200, 206, 212, 220, 223, 226, 229, 232, 235, 238, 241, 244, 247, 250, 253, 256, 259, 262, 265, 268, 271, 274, 277, 280, 283, 286, 0, 3, 6, 9, 12, 1, 4, 7, 10, 13, 0, 1, 2, 5, 8, 11, 14, 0, 3, 6, 9, 12, 1, 4, 7, 10, 13, 2, 3, 4, 5, 8, 11, 14, 0, 3, 6, 9, 12, 1, 4, 7, 10, 13, 2, 5, 6, 7, 8, 11, 14, 0, 3, 6, 9, 12, 1, 4, 7, 10, 13, 2, 5, 8, 9, 10, 11, 14, 0, 3, 6, 9, 12, 1, 4, 7, 10, 13, 2, 5, 8, 11, 12, 13, 14, 0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 1, 4, 7, 10, 13, 16, 19, 22, 25, 28, 31, 2, 5, 8, 11, 14, 15, 16, 17, 20, 23, 26, 29, 32, 15, 18, 21, 24, 27, 30, 16, 19, 22, 25, 28, 31, 17, 18, 19, 20, 23, 26, 29, 32, 15, 18, 21, 24, 27, 30, 16, 19, 22, 25, 28, 31, 17, 20, 21, 22, 23, 26, 29, 32, 15, 18, 21, 24, 27, 30, 16, 19, 22, 25, 28, 31, 17, 20, 23, 24, 25, 26, 29, 32, 15, 18, 21, 24, 27, 30, 16, 19, 22, 25, 28, 31, 17, 20, 23, 26, 27, 28, 29, 32, 15, 18, 21, 24, 27, 30, 16, 19, 22, 25, 28, 31, 17, 20, 23, 26, 29, 30, 31, 32, 0, 1, 2, 0, 1, 2, 3, 4, 5, 3, 4, 5, 6, 7, 8, 6, 7, 8, 9, 10, 11, 9, 10, 11, 12, 13, 14, 12, 13, 14, 15, 16, 17, 15, 16, 17, 18, 19, 20, 18, 19, 20, 21, 22, 23, 21, 22, 23, 24, 25, 26, 24, 25, 26, 27, 28, 29, 27, 28, 29, 30, 31, 32, 30, 31, 32};

/* fconstraints_jacobian:(i0[55])->(o0[33x55,286nz]) */
static int casadi_f0(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, void* mem) {
  casadi_real a0, a1, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a2, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a3, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a4, a40, a41, a42, a43, a44, a45, a46, a47, a48, a49, a5, a50, a51, a52, a53, a54, a55, a56, a57, a58, a59, a6, a7, a8, a9;
    a0=8.5000000000000000e+00;
    if (res[0]!=0) res[0][0]=a0;
    a1=2.6180339887498953e+00;
    if (res[0]!=0) res[0][1]=a1;
    a2=-7.2360679774997905e-01;
    if (res[0]!=0) res[0][2]=a2;
    a3=3.8196601125010515e-01;
    if (res[0]!=0) res[0][3]=a3;
    a4=-2.7639320225002101e-01;
    if (res[0]!=0) res[0][4]=a4;
    if (res[0]!=0) res[0][5]=a0;
    if (res[0]!=0) res[0][6]=a1;
    if (res[0]!=0) res[0][7]=a2;
    if (res[0]!=0) res[0][8]=a3;
    if (res[0]!=0) res[0][9]=a4;
    a5=2.5000000000000000e-01;
    a6=arg[0] ? arg[0][34] : 0;
    a7=cos(a6);
    a8=arg[0] ? arg[0][33] : 0;
    a9=arg[0] ? arg[0][2] : 0;
    a10=sin(a9);
    a10=(a8*a10);
    a10=(a7*a10);
    a10=(a5*a10);
    if (res[0]!=0) res[0][10]=a10;
    a10=cos(a6);
    a11=cos(a9);
    a11=(a8*a11);
    a11=(a10*a11);
    a11=(a5*a11);
    a11=(-a11);
    if (res[0]!=0) res[0][11]=a11;
    if (res[0]!=0) res[0][12]=a0;
    if (res[0]!=0) res[0][13]=a1;
    if (res[0]!=0) res[0][14]=a2;
    if (res[0]!=0) res[0][15]=a3;
    if (res[0]!=0) res[0][16]=a4;
    a11=-1.0472135954999581e+01;
    if (res[0]!=0) res[0][17]=a11;
    a12=-1.1708203932499370e+00;
    if (res[0]!=0) res[0][18]=a12;
    a13=2.;
    if (res[0]!=0) res[0][19]=a13;
    a14=-8.9442719099991586e-01;
    if (res[0]!=0) res[0][20]=a14;
    a15=6.1803398874989479e-01;
    if (res[0]!=0) res[0][21]=a15;
    if (res[0]!=0) res[0][22]=a11;
    if (res[0]!=0) res[0][23]=a12;
    if (res[0]!=0) res[0][24]=a13;
    if (res[0]!=0) res[0][25]=a14;
    if (res[0]!=0) res[0][26]=a15;
    if (res[0]!=0) res[0][27]=a11;
    a16=arg[0] ? arg[0][36] : 0;
    a17=cos(a16);
    a18=arg[0] ? arg[0][35] : 0;
    a19=arg[0] ? arg[0][5] : 0;
    a20=sin(a19);
    a20=(a18*a20);
    a20=(a17*a20);
    a20=(a5*a20);
    if (res[0]!=0) res[0][28]=a20;
    a20=cos(a16);
    a21=cos(a19);
    a21=(a18*a21);
    a21=(a20*a21);
    a21=(a5*a21);
    a21=(-a21);
    if (res[0]!=0) res[0][29]=a21;
    if (res[0]!=0) res[0][30]=a12;
    if (res[0]!=0) res[0][31]=a13;
    if (res[0]!=0) res[0][32]=a14;
    if (res[0]!=0) res[0][33]=a15;
    a21=2.8944271909999162e+00;
    if (res[0]!=0) res[0][34]=a21;
    a22=-2.;
    if (res[0]!=0) res[0][35]=a22;
    a23=-1.7082039324993659e-01;
    if (res[0]!=0) res[0][36]=a23;
    a24=1.6180339887498949e+00;
    if (res[0]!=0) res[0][37]=a24;
    if (res[0]!=0) res[0][38]=a14;
    if (res[0]!=0) res[0][39]=a21;
    if (res[0]!=0) res[0][40]=a22;
    if (res[0]!=0) res[0][41]=a23;
    if (res[0]!=0) res[0][42]=a24;
    if (res[0]!=0) res[0][43]=a14;
    if (res[0]!=0) res[0][44]=a21;
    if (res[0]!=0) res[0][45]=a22;
    a25=arg[0] ? arg[0][38] : 0;
    a26=cos(a25);
    a27=arg[0] ? arg[0][37] : 0;
    a28=arg[0] ? arg[0][8] : 0;
    a29=sin(a28);
    a29=(a27*a29);
    a29=(a26*a29);
    a29=(a5*a29);
    if (res[0]!=0) res[0][46]=a29;
    a29=cos(a25);
    a30=cos(a28);
    a30=(a27*a30);
    a30=(a29*a30);
    a30=(a5*a30);
    a30=(-a30);
    if (res[0]!=0) res[0][47]=a30;
    if (res[0]!=0) res[0][48]=a23;
    if (res[0]!=0) res[0][49]=a24;
    if (res[0]!=0) res[0][50]=a14;
    a30=-1.5278640450004206e+00;
    if (res[0]!=0) res[0][51]=a30;
    a31=8.9442719099991586e-01;
    if (res[0]!=0) res[0][52]=a31;
    a32=-1.6180339887498949e+00;
    if (res[0]!=0) res[0][53]=a32;
    a33=1.7082039324993681e-01;
    if (res[0]!=0) res[0][54]=a33;
    if (res[0]!=0) res[0][55]=a13;
    if (res[0]!=0) res[0][56]=a30;
    if (res[0]!=0) res[0][57]=a31;
    if (res[0]!=0) res[0][58]=a32;
    if (res[0]!=0) res[0][59]=a33;
    if (res[0]!=0) res[0][60]=a13;
    if (res[0]!=0) res[0][61]=a30;
    if (res[0]!=0) res[0][62]=a31;
    if (res[0]!=0) res[0][63]=a32;
    a34=arg[0] ? arg[0][40] : 0;
    a35=cos(a34);
    a36=arg[0] ? arg[0][39] : 0;
    a37=arg[0] ? arg[0][11] : 0;
    a38=sin(a37);
    a38=(a36*a38);
    a38=(a35*a38);
    a38=(a5*a38);
    if (res[0]!=0) res[0][64]=a38;
    a38=cos(a34);
    a39=cos(a37);
    a39=(a36*a39);
    a39=(a38*a39);
    a39=(a5*a39);
    a39=(-a39);
    if (res[0]!=0) res[0][65]=a39;
    if (res[0]!=0) res[0][66]=a33;
    if (res[0]!=0) res[0][67]=a13;
    a39=1.1055728090000840e+00;
    if (res[0]!=0) res[0][68]=a39;
    a40=-6.1803398874989479e-01;
    if (res[0]!=0) res[0][69]=a40;
    if (res[0]!=0) res[0][70]=a31;
    if (res[0]!=0) res[0][71]=a22;
    a41=1.1708203932499357e+00;
    if (res[0]!=0) res[0][72]=a41;
    if (res[0]!=0) res[0][73]=a39;
    if (res[0]!=0) res[0][74]=a40;
    if (res[0]!=0) res[0][75]=a31;
    if (res[0]!=0) res[0][76]=a22;
    if (res[0]!=0) res[0][77]=a41;
    if (res[0]!=0) res[0][78]=a39;
    if (res[0]!=0) res[0][79]=a40;
    if (res[0]!=0) res[0][80]=a31;
    if (res[0]!=0) res[0][81]=a22;
    a42=arg[0] ? arg[0][42] : 0;
    a43=cos(a42);
    a44=arg[0] ? arg[0][41] : 0;
    a45=arg[0] ? arg[0][14] : 0;
    a46=sin(a45);
    a46=(a44*a46);
    a46=(a43*a46);
    a46=(a5*a46);
    if (res[0]!=0) res[0][82]=a46;
    a46=cos(a42);
    a47=cos(a45);
    a47=(a44*a47);
    a47=(a46*a47);
    a47=(a5*a47);
    a47=(-a47);
    if (res[0]!=0) res[0][83]=a47;
    if (res[0]!=0) res[0][84]=a41;
    a47=-5.0000000000000000e-01;
    if (res[0]!=0) res[0][85]=a47;
    a48=2.7639320225002101e-01;
    if (res[0]!=0) res[0][86]=a48;
    a49=-3.8196601125010515e-01;
    if (res[0]!=0) res[0][87]=a49;
    a50=7.2360679774997894e-01;
    if (res[0]!=0) res[0][88]=a50;
    a51=-2.6180339887498936e+00;
    if (res[0]!=0) res[0][89]=a51;
    if (res[0]!=0) res[0][90]=a0;
    if (res[0]!=0) res[0][91]=a1;
    if (res[0]!=0) res[0][92]=a2;
    if (res[0]!=0) res[0][93]=a3;
    if (res[0]!=0) res[0][94]=a4;
    a52=5.0000000000000000e-01;
    if (res[0]!=0) res[0][95]=a52;
    if (res[0]!=0) res[0][96]=a47;
    if (res[0]!=0) res[0][97]=a48;
    if (res[0]!=0) res[0][98]=a49;
    if (res[0]!=0) res[0][99]=a50;
    if (res[0]!=0) res[0][100]=a51;
    if (res[0]!=0) res[0][101]=a0;
    if (res[0]!=0) res[0][102]=a1;
    if (res[0]!=0) res[0][103]=a2;
    if (res[0]!=0) res[0][104]=a3;
    if (res[0]!=0) res[0][105]=a4;
    if (res[0]!=0) res[0][106]=a52;
    if (res[0]!=0) res[0][107]=a47;
    if (res[0]!=0) res[0][108]=a48;
    if (res[0]!=0) res[0][109]=a49;
    if (res[0]!=0) res[0][110]=a50;
    if (res[0]!=0) res[0][111]=a51;
    a53=arg[0] ? arg[0][44] : 0;
    a54=cos(a53);
    a55=arg[0] ? arg[0][43] : 0;
    a56=arg[0] ? arg[0][17] : 0;
    a57=sin(a56);
    a57=(a55*a57);
    a57=(a54*a57);
    a57=(a5*a57);
    if (res[0]!=0) res[0][112]=a57;
    a57=cos(a53);
    a58=cos(a56);
    a58=(a55*a58);
    a58=(a57*a58);
    a58=(a5*a58);
    a58=(-a58);
    if (res[0]!=0) res[0][113]=a58;
    if (res[0]!=0) res[0][114]=a0;
    if (res[0]!=0) res[0][115]=a1;
    if (res[0]!=0) res[0][116]=a2;
    if (res[0]!=0) res[0][117]=a3;
    if (res[0]!=0) res[0][118]=a4;
    if (res[0]!=0) res[0][119]=a52;
    if (res[0]!=0) res[0][120]=a11;
    if (res[0]!=0) res[0][121]=a12;
    if (res[0]!=0) res[0][122]=a13;
    if (res[0]!=0) res[0][123]=a14;
    if (res[0]!=0) res[0][124]=a15;
    a52=-1.1055728090000840e+00;
    if (res[0]!=0) res[0][125]=a52;
    if (res[0]!=0) res[0][126]=a11;
    if (res[0]!=0) res[0][127]=a12;
    if (res[0]!=0) res[0][128]=a13;
    if (res[0]!=0) res[0][129]=a14;
    if (res[0]!=0) res[0][130]=a15;
    if (res[0]!=0) res[0][131]=a52;
    if (res[0]!=0) res[0][132]=a11;
    a11=arg[0] ? arg[0][46] : 0;
    a4=cos(a11);
    a3=arg[0] ? arg[0][45] : 0;
    a2=arg[0] ? arg[0][20] : 0;
    a1=sin(a2);
    a1=(a3*a1);
    a1=(a4*a1);
    a1=(a5*a1);
    if (res[0]!=0) res[0][133]=a1;
    a1=cos(a11);
    a0=cos(a2);
    a0=(a3*a0);
    a0=(a1*a0);
    a0=(a5*a0);
    a0=(-a0);
    if (res[0]!=0) res[0][134]=a0;
    if (res[0]!=0) res[0][135]=a12;
    if (res[0]!=0) res[0][136]=a13;
    if (res[0]!=0) res[0][137]=a14;
    if (res[0]!=0) res[0][138]=a15;
    if (res[0]!=0) res[0][139]=a52;
    if (res[0]!=0) res[0][140]=a21;
    if (res[0]!=0) res[0][141]=a22;
    if (res[0]!=0) res[0][142]=a23;
    if (res[0]!=0) res[0][143]=a24;
    if (res[0]!=0) res[0][144]=a14;
    a52=1.5278640450004206e+00;
    if (res[0]!=0) res[0][145]=a52;
    if (res[0]!=0) res[0][146]=a21;
    if (res[0]!=0) res[0][147]=a22;
    if (res[0]!=0) res[0][148]=a23;
    if (res[0]!=0) res[0][149]=a24;
    if (res[0]!=0) res[0][150]=a14;
    if (res[0]!=0) res[0][151]=a52;
    if (res[0]!=0) res[0][152]=a21;
    if (res[0]!=0) res[0][153]=a22;
    a21=arg[0] ? arg[0][48] : 0;
    a15=cos(a21);
    a12=arg[0] ? arg[0][47] : 0;
    a0=arg[0] ? arg[0][23] : 0;
    a58=sin(a0);
    a58=(a12*a58);
    a58=(a15*a58);
    a58=(a5*a58);
    if (res[0]!=0) res[0][154]=a58;
    a58=cos(a21);
    a59=cos(a0);
    a59=(a12*a59);
    a59=(a58*a59);
    a59=(a5*a59);
    a59=(-a59);
    if (res[0]!=0) res[0][155]=a59;
    if (res[0]!=0) res[0][156]=a23;
    if (res[0]!=0) res[0][157]=a24;
    if (res[0]!=0) res[0][158]=a14;
    if (res[0]!=0) res[0][159]=a52;
    if (res[0]!=0) res[0][160]=a30;
    if (res[0]!=0) res[0][161]=a31;
    if (res[0]!=0) res[0][162]=a32;
    if (res[0]!=0) res[0][163]=a33;
    if (res[0]!=0) res[0][164]=a13;
    a52=-2.8944271909999157e+00;
    if (res[0]!=0) res[0][165]=a52;
    if (res[0]!=0) res[0][166]=a30;
    if (res[0]!=0) res[0][167]=a31;
    if (res[0]!=0) res[0][168]=a32;
    if (res[0]!=0) res[0][169]=a33;
    if (res[0]!=0) res[0][170]=a13;
    if (res[0]!=0) res[0][171]=a52;
    if (res[0]!=0) res[0][172]=a30;
    if (res[0]!=0) res[0][173]=a31;
    if (res[0]!=0) res[0][174]=a32;
    a32=arg[0] ? arg[0][50] : 0;
    a30=cos(a32);
    a14=arg[0] ? arg[0][49] : 0;
    a24=arg[0] ? arg[0][26] : 0;
    a23=sin(a24);
    a23=(a14*a23);
    a23=(a30*a23);
    a23=(a5*a23);
    if (res[0]!=0) res[0][175]=a23;
    a23=cos(a32);
    a59=cos(a24);
    a59=(a14*a59);
    a59=(a23*a59);
    a59=(a5*a59);
    a59=(-a59);
    if (res[0]!=0) res[0][176]=a59;
    if (res[0]!=0) res[0][177]=a33;
    if (res[0]!=0) res[0][178]=a13;
    if (res[0]!=0) res[0][179]=a52;
    if (res[0]!=0) res[0][180]=a39;
    if (res[0]!=0) res[0][181]=a40;
    if (res[0]!=0) res[0][182]=a31;
    if (res[0]!=0) res[0][183]=a22;
    if (res[0]!=0) res[0][184]=a41;
    a52=1.0472135954999574e+01;
    if (res[0]!=0) res[0][185]=a52;
    if (res[0]!=0) res[0][186]=a39;
    if (res[0]!=0) res[0][187]=a40;
    if (res[0]!=0) res[0][188]=a31;
    if (res[0]!=0) res[0][189]=a22;
    if (res[0]!=0) res[0][190]=a41;
    if (res[0]!=0) res[0][191]=a52;
    if (res[0]!=0) res[0][192]=a39;
    if (res[0]!=0) res[0][193]=a40;
    if (res[0]!=0) res[0][194]=a31;
    if (res[0]!=0) res[0][195]=a22;
    a22=arg[0] ? arg[0][52] : 0;
    a31=cos(a22);
    a40=arg[0] ? arg[0][51] : 0;
    a39=arg[0] ? arg[0][29] : 0;
    a13=sin(a39);
    a13=(a40*a13);
    a13=(a31*a13);
    a13=(a5*a13);
    if (res[0]!=0) res[0][196]=a13;
    a13=cos(a22);
    a33=cos(a39);
    a33=(a40*a33);
    a33=(a13*a33);
    a33=(a5*a33);
    a33=(-a33);
    if (res[0]!=0) res[0][197]=a33;
    if (res[0]!=0) res[0][198]=a41;
    if (res[0]!=0) res[0][199]=a52;
    if (res[0]!=0) res[0][200]=a47;
    if (res[0]!=0) res[0][201]=a48;
    if (res[0]!=0) res[0][202]=a49;
    if (res[0]!=0) res[0][203]=a50;
    if (res[0]!=0) res[0][204]=a51;
    a52=-8.4999999999999947e+00;
    if (res[0]!=0) res[0][205]=a52;
    if (res[0]!=0) res[0][206]=a47;
    if (res[0]!=0) res[0][207]=a48;
    if (res[0]!=0) res[0][208]=a49;
    if (res[0]!=0) res[0][209]=a50;
    if (res[0]!=0) res[0][210]=a51;
    if (res[0]!=0) res[0][211]=a52;
    if (res[0]!=0) res[0][212]=a47;
    if (res[0]!=0) res[0][213]=a48;
    if (res[0]!=0) res[0][214]=a49;
    if (res[0]!=0) res[0][215]=a50;
    if (res[0]!=0) res[0][216]=a51;
    a51=arg[0] ? arg[0][54] : 0;
    a50=cos(a51);
    a49=arg[0] ? arg[0][53] : 0;
    a48=arg[0] ? arg[0][32] : 0;
    a47=sin(a48);
    a47=(a49*a47);
    a47=(a50*a47);
    a47=(a5*a47);
    if (res[0]!=0) res[0][217]=a47;
    a47=cos(a51);
    a41=cos(a48);
    a41=(a49*a41);
    a41=(a47*a41);
    a41=(a5*a41);
    a41=(-a41);
    if (res[0]!=0) res[0][218]=a41;
    if (res[0]!=0) res[0][219]=a52;
    a52=cos(a9);
    a7=(a7*a52);
    a7=(a5*a7);
    a7=(-a7);
    if (res[0]!=0) res[0][220]=a7;
    a9=sin(a9);
    a10=(a10*a9);
    a10=(a5*a10);
    a10=(-a10);
    if (res[0]!=0) res[0][221]=a10;
    a10=sin(a6);
    a10=(a5*a10);
    a10=(-a10);
    if (res[0]!=0) res[0][222]=a10;
    a52=(a8*a52);
    a10=sin(a6);
    a52=(a52*a10);
    a52=(a5*a52);
    if (res[0]!=0) res[0][223]=a52;
    a9=(a8*a9);
    a52=sin(a6);
    a9=(a9*a52);
    a9=(a5*a9);
    if (res[0]!=0) res[0][224]=a9;
    a6=cos(a6);
    a8=(a8*a6);
    a8=(a5*a8);
    a8=(-a8);
    if (res[0]!=0) res[0][225]=a8;
    a8=cos(a19);
    a17=(a17*a8);
    a17=(a5*a17);
    a17=(-a17);
    if (res[0]!=0) res[0][226]=a17;
    a19=sin(a19);
    a20=(a20*a19);
    a20=(a5*a20);
    a20=(-a20);
    if (res[0]!=0) res[0][227]=a20;
    a20=sin(a16);
    a20=(a5*a20);
    a20=(-a20);
    if (res[0]!=0) res[0][228]=a20;
    a8=(a18*a8);
    a20=sin(a16);
    a8=(a8*a20);
    a8=(a5*a8);
    if (res[0]!=0) res[0][229]=a8;
    a19=(a18*a19);
    a8=sin(a16);
    a19=(a19*a8);
    a19=(a5*a19);
    if (res[0]!=0) res[0][230]=a19;
    a16=cos(a16);
    a18=(a18*a16);
    a18=(a5*a18);
    a18=(-a18);
    if (res[0]!=0) res[0][231]=a18;
    a18=cos(a28);
    a26=(a26*a18);
    a26=(a5*a26);
    a26=(-a26);
    if (res[0]!=0) res[0][232]=a26;
    a28=sin(a28);
    a29=(a29*a28);
    a29=(a5*a29);
    a29=(-a29);
    if (res[0]!=0) res[0][233]=a29;
    a29=sin(a25);
    a29=(a5*a29);
    a29=(-a29);
    if (res[0]!=0) res[0][234]=a29;
    a18=(a27*a18);
    a29=sin(a25);
    a18=(a18*a29);
    a18=(a5*a18);
    if (res[0]!=0) res[0][235]=a18;
    a28=(a27*a28);
    a18=sin(a25);
    a28=(a28*a18);
    a28=(a5*a28);
    if (res[0]!=0) res[0][236]=a28;
    a25=cos(a25);
    a27=(a27*a25);
    a27=(a5*a27);
    a27=(-a27);
    if (res[0]!=0) res[0][237]=a27;
    a27=cos(a37);
    a35=(a35*a27);
    a35=(a5*a35);
    a35=(-a35);
    if (res[0]!=0) res[0][238]=a35;
    a37=sin(a37);
    a38=(a38*a37);
    a38=(a5*a38);
    a38=(-a38);
    if (res[0]!=0) res[0][239]=a38;
    a38=sin(a34);
    a38=(a5*a38);
    a38=(-a38);
    if (res[0]!=0) res[0][240]=a38;
    a27=(a36*a27);
    a38=sin(a34);
    a27=(a27*a38);
    a27=(a5*a27);
    if (res[0]!=0) res[0][241]=a27;
    a37=(a36*a37);
    a27=sin(a34);
    a37=(a37*a27);
    a37=(a5*a37);
    if (res[0]!=0) res[0][242]=a37;
    a34=cos(a34);
    a36=(a36*a34);
    a36=(a5*a36);
    a36=(-a36);
    if (res[0]!=0) res[0][243]=a36;
    a36=cos(a45);
    a43=(a43*a36);
    a43=(a5*a43);
    a43=(-a43);
    if (res[0]!=0) res[0][244]=a43;
    a45=sin(a45);
    a46=(a46*a45);
    a46=(a5*a46);
    a46=(-a46);
    if (res[0]!=0) res[0][245]=a46;
    a46=sin(a42);
    a46=(a5*a46);
    a46=(-a46);
    if (res[0]!=0) res[0][246]=a46;
    a36=(a44*a36);
    a46=sin(a42);
    a36=(a36*a46);
    a36=(a5*a36);
    if (res[0]!=0) res[0][247]=a36;
    a45=(a44*a45);
    a36=sin(a42);
    a45=(a45*a36);
    a45=(a5*a45);
    if (res[0]!=0) res[0][248]=a45;
    a42=cos(a42);
    a44=(a44*a42);
    a44=(a5*a44);
    a44=(-a44);
    if (res[0]!=0) res[0][249]=a44;
    a44=cos(a56);
    a54=(a54*a44);
    a54=(a5*a54);
    a54=(-a54);
    if (res[0]!=0) res[0][250]=a54;
    a56=sin(a56);
    a57=(a57*a56);
    a57=(a5*a57);
    a57=(-a57);
    if (res[0]!=0) res[0][251]=a57;
    a57=sin(a53);
    a57=(a5*a57);
    a57=(-a57);
    if (res[0]!=0) res[0][252]=a57;
    a44=(a55*a44);
    a57=sin(a53);
    a44=(a44*a57);
    a44=(a5*a44);
    if (res[0]!=0) res[0][253]=a44;
    a56=(a55*a56);
    a44=sin(a53);
    a56=(a56*a44);
    a56=(a5*a56);
    if (res[0]!=0) res[0][254]=a56;
    a53=cos(a53);
    a55=(a55*a53);
    a55=(a5*a55);
    a55=(-a55);
    if (res[0]!=0) res[0][255]=a55;
    a55=cos(a2);
    a4=(a4*a55);
    a4=(a5*a4);
    a4=(-a4);
    if (res[0]!=0) res[0][256]=a4;
    a2=sin(a2);
    a1=(a1*a2);
    a1=(a5*a1);
    a1=(-a1);
    if (res[0]!=0) res[0][257]=a1;
    a1=sin(a11);
    a1=(a5*a1);
    a1=(-a1);
    if (res[0]!=0) res[0][258]=a1;
    a55=(a3*a55);
    a1=sin(a11);
    a55=(a55*a1);
    a55=(a5*a55);
    if (res[0]!=0) res[0][259]=a55;
    a2=(a3*a2);
    a55=sin(a11);
    a2=(a2*a55);
    a2=(a5*a2);
    if (res[0]!=0) res[0][260]=a2;
    a11=cos(a11);
    a3=(a3*a11);
    a3=(a5*a3);
    a3=(-a3);
    if (res[0]!=0) res[0][261]=a3;
    a3=cos(a0);
    a15=(a15*a3);
    a15=(a5*a15);
    a15=(-a15);
    if (res[0]!=0) res[0][262]=a15;
    a0=sin(a0);
    a58=(a58*a0);
    a58=(a5*a58);
    a58=(-a58);
    if (res[0]!=0) res[0][263]=a58;
    a58=sin(a21);
    a58=(a5*a58);
    a58=(-a58);
    if (res[0]!=0) res[0][264]=a58;
    a3=(a12*a3);
    a58=sin(a21);
    a3=(a3*a58);
    a3=(a5*a3);
    if (res[0]!=0) res[0][265]=a3;
    a0=(a12*a0);
    a3=sin(a21);
    a0=(a0*a3);
    a0=(a5*a0);
    if (res[0]!=0) res[0][266]=a0;
    a21=cos(a21);
    a12=(a12*a21);
    a12=(a5*a12);
    a12=(-a12);
    if (res[0]!=0) res[0][267]=a12;
    a12=cos(a24);
    a30=(a30*a12);
    a30=(a5*a30);
    a30=(-a30);
    if (res[0]!=0) res[0][268]=a30;
    a24=sin(a24);
    a23=(a23*a24);
    a23=(a5*a23);
    a23=(-a23);
    if (res[0]!=0) res[0][269]=a23;
    a23=sin(a32);
    a23=(a5*a23);
    a23=(-a23);
    if (res[0]!=0) res[0][270]=a23;
    a12=(a14*a12);
    a23=sin(a32);
    a12=(a12*a23);
    a12=(a5*a12);
    if (res[0]!=0) res[0][271]=a12;
    a24=(a14*a24);
    a12=sin(a32);
    a24=(a24*a12);
    a24=(a5*a24);
    if (res[0]!=0) res[0][272]=a24;
    a32=cos(a32);
    a14=(a14*a32);
    a14=(a5*a14);
    a14=(-a14);
    if (res[0]!=0) res[0][273]=a14;
    a14=cos(a39);
    a31=(a31*a14);
    a31=(a5*a31);
    a31=(-a31);
    if (res[0]!=0) res[0][274]=a31;
    a39=sin(a39);
    a13=(a13*a39);
    a13=(a5*a13);
    a13=(-a13);
    if (res[0]!=0) res[0][275]=a13;
    a13=sin(a22);
    a13=(a5*a13);
    a13=(-a13);
    if (res[0]!=0) res[0][276]=a13;
    a14=(a40*a14);
    a13=sin(a22);
    a14=(a14*a13);
    a14=(a5*a14);
    if (res[0]!=0) res[0][277]=a14;
    a39=(a40*a39);
    a14=sin(a22);
    a39=(a39*a14);
    a39=(a5*a39);
    if (res[0]!=0) res[0][278]=a39;
    a22=cos(a22);
    a40=(a40*a22);
    a40=(a5*a40);
    a40=(-a40);
    if (res[0]!=0) res[0][279]=a40;
    a40=cos(a48);
    a50=(a50*a40);
    a50=(a5*a50);
    a50=(-a50);
    if (res[0]!=0) res[0][280]=a50;
    a48=sin(a48);
    a47=(a47*a48);
    a47=(a5*a47);
    a47=(-a47);
    if (res[0]!=0) res[0][281]=a47;
    a47=sin(a51);
    a47=(a5*a47);
    a47=(-a47);
    if (res[0]!=0) res[0][282]=a47;
    a40=(a49*a40);
    a47=sin(a51);
    a40=(a40*a47);
    a40=(a5*a40);
    if (res[0]!=0) res[0][283]=a40;
    a48=(a49*a48);
    a40=sin(a51);
    a48=(a48*a40);
    a48=(a5*a48);
    if (res[0]!=0) res[0][284]=a48;
    a51=cos(a51);
    a49=(a49*a51);
    a5=(a5*a49);
    a5=(-a5);
    if (res[0]!=0) res[0][285]=a5;
    return 0;
}

extern "C" CASADI_SYMBOL_EXPORT int fconstraints_jacobian(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, void* mem){
    return casadi_f0(arg, res, iw, w, mem);
}

extern "C" CASADI_SYMBOL_EXPORT void fconstraints_jacobian_incref(void) {
}

extern "C" CASADI_SYMBOL_EXPORT void fconstraints_jacobian_decref(void) {
}

extern "C" CASADI_SYMBOL_EXPORT casadi_int fconstraints_jacobian_n_in(void) { return 1;}

extern "C" CASADI_SYMBOL_EXPORT casadi_int fconstraints_jacobian_n_out(void) { return 1;}

extern "C" CASADI_SYMBOL_EXPORT const char* fconstraints_jacobian_name_in(casadi_int i){
    switch (i) {
        case 0: return "i0";
        default: return 0;
    }
}

extern "C" CASADI_SYMBOL_EXPORT const char* fconstraints_jacobian_name_out(casadi_int i){
    switch (i) {
        case 0: return "o0";
        default: return 0;
    }
}

extern "C" CASADI_SYMBOL_EXPORT const casadi_int* fconstraints_jacobian_sparsity_in(casadi_int i) {
    switch (i) {
        case 0: return casadi_s0;
        default: return 0;
    }
}

extern "C" CASADI_SYMBOL_EXPORT const casadi_int* fconstraints_jacobian_sparsity_out(casadi_int i) {
    switch (i) {
        case 0: return casadi_s1;
        default: return 0;
    }
}

extern "C" CASADI_SYMBOL_EXPORT int fconstraints_jacobian_work(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w) {
    if (sz_arg) *sz_arg = 1;
    if (sz_res) *sz_res = 1;
    if (sz_iw) *sz_iw = 0;
    if (sz_w) *sz_w = 0;
    return 0;
}


